// Code generated by protoc-gen-go.
// source: logservice/pb/log_service.proto.txt
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	logservice/pb/log_service.proto.txt

It has these top-level messages:
	Timestamp
	Latency
	LogServiceError
	UserAppLogLine
	UserAppLogGroup
	FlushRequest
	SetStatusRequest
	LogOffset
	LogLine
	RequestLog
	LogModuleVersion
	LogReadRequest
	LogReadResponse
	LogUsageRecord
	LogUsageRequest
	LogUsageResponse
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LogServiceError_ErrorCode int32

const (
	LogServiceError_OK              LogServiceError_ErrorCode = 0
	LogServiceError_INVALID_REQUEST LogServiceError_ErrorCode = 1
	LogServiceError_STORAGE_ERROR   LogServiceError_ErrorCode = 2
)

var LogServiceError_ErrorCode_name = map[int32]string{
	0: "OK",
	1: "INVALID_REQUEST",
	2: "STORAGE_ERROR",
}
var LogServiceError_ErrorCode_value = map[string]int32{
	"OK":              0,
	"INVALID_REQUEST": 1,
	"STORAGE_ERROR":   2,
}

func (x LogServiceError_ErrorCode) Enum() *LogServiceError_ErrorCode {
	p := new(LogServiceError_ErrorCode)
	*p = x
	return p
}
func (x LogServiceError_ErrorCode) String() string {
	return proto.EnumName(LogServiceError_ErrorCode_name, int32(x))
}
func (x *LogServiceError_ErrorCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LogServiceError_ErrorCode_value, data, "LogServiceError_ErrorCode")
	if err != nil {
		return err
	}
	*x = LogServiceError_ErrorCode(value)
	return nil
}
func (LogServiceError_ErrorCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type Timestamp struct {
	Seconds          *int64 `protobuf:"varint,1,opt,name=seconds" json:"seconds,omitempty"`
	Nanos            *int32 `protobuf:"varint,2,opt,name=nanos" json:"nanos,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Timestamp) Reset()                    { *m = Timestamp{} }
func (m *Timestamp) String() string            { return proto.CompactTextString(m) }
func (*Timestamp) ProtoMessage()               {}
func (*Timestamp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Timestamp) GetSeconds() int64 {
	if m != nil && m.Seconds != nil {
		return *m.Seconds
	}
	return 0
}

func (m *Timestamp) GetNanos() int32 {
	if m != nil && m.Nanos != nil {
		return *m.Nanos
	}
	return 0
}

type Latency struct {
	Seconds          *int64 `protobuf:"varint,1,opt,name=seconds" json:"seconds,omitempty"`
	Nanos            *int32 `protobuf:"varint,2,opt,name=nanos" json:"nanos,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Latency) Reset()                    { *m = Latency{} }
func (m *Latency) String() string            { return proto.CompactTextString(m) }
func (*Latency) ProtoMessage()               {}
func (*Latency) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Latency) GetSeconds() int64 {
	if m != nil && m.Seconds != nil {
		return *m.Seconds
	}
	return 0
}

func (m *Latency) GetNanos() int32 {
	if m != nil && m.Nanos != nil {
		return *m.Nanos
	}
	return 0
}

type LogServiceError struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *LogServiceError) Reset()                    { *m = LogServiceError{} }
func (m *LogServiceError) String() string            { return proto.CompactTextString(m) }
func (*LogServiceError) ProtoMessage()               {}
func (*LogServiceError) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type UserAppLogLine struct {
	TimestampUsec    *int64  `protobuf:"varint,1,opt,name=timestamp_usec,json=timestampUsec" json:"timestamp_usec,omitempty"`
	Level            *int64  `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	LogMessage       *string `protobuf:"bytes,3,opt,name=logMessage" json:"logMessage,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserAppLogLine) Reset()                    { *m = UserAppLogLine{} }
func (m *UserAppLogLine) String() string            { return proto.CompactTextString(m) }
func (*UserAppLogLine) ProtoMessage()               {}
func (*UserAppLogLine) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *UserAppLogLine) GetTimestampUsec() int64 {
	if m != nil && m.TimestampUsec != nil {
		return *m.TimestampUsec
	}
	return 0
}

func (m *UserAppLogLine) GetLevel() int64 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *UserAppLogLine) GetLogMessage() string {
	if m != nil && m.LogMessage != nil {
		return *m.LogMessage
	}
	return ""
}

type UserAppLogGroup struct {
	LogLine          []*UserAppLogLine `protobuf:"bytes,2,rep,name=log_line,json=logLine" json:"log_line,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *UserAppLogGroup) Reset()                    { *m = UserAppLogGroup{} }
func (m *UserAppLogGroup) String() string            { return proto.CompactTextString(m) }
func (*UserAppLogGroup) ProtoMessage()               {}
func (*UserAppLogGroup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UserAppLogGroup) GetLogLine() []*UserAppLogLine {
	if m != nil {
		return m.LogLine
	}
	return nil
}

type FlushRequest struct {
	Logs             []byte `protobuf:"bytes,1,opt,name=logs" json:"logs,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *FlushRequest) Reset()                    { *m = FlushRequest{} }
func (m *FlushRequest) String() string            { return proto.CompactTextString(m) }
func (*FlushRequest) ProtoMessage()               {}
func (*FlushRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *FlushRequest) GetLogs() []byte {
	if m != nil {
		return m.Logs
	}
	return nil
}

type SetStatusRequest struct {
	Status           *string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SetStatusRequest) Reset()                    { *m = SetStatusRequest{} }
func (m *SetStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*SetStatusRequest) ProtoMessage()               {}
func (*SetStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *SetStatusRequest) GetStatus() string {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ""
}

type LogOffset struct {
	RequestId        []byte `protobuf:"bytes,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LogOffset) Reset()                    { *m = LogOffset{} }
func (m *LogOffset) String() string            { return proto.CompactTextString(m) }
func (*LogOffset) ProtoMessage()               {}
func (*LogOffset) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *LogOffset) GetRequestId() []byte {
	if m != nil {
		return m.RequestId
	}
	return nil
}

type LogLine struct {
	Time             *Timestamp `protobuf:"bytes,1,opt,name=time" json:"time,omitempty"`
	Level            *int32     `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	LogMessage       *string    `protobuf:"bytes,3,opt,name=logMessage" json:"logMessage,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *LogLine) Reset()                    { *m = LogLine{} }
func (m *LogLine) String() string            { return proto.CompactTextString(m) }
func (*LogLine) ProtoMessage()               {}
func (*LogLine) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *LogLine) GetTime() *Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *LogLine) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *LogLine) GetLogMessage() string {
	if m != nil && m.LogMessage != nil {
		return *m.LogMessage
	}
	return ""
}

type RequestLog struct {
	AppId                   *string    `protobuf:"bytes,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	ModuleId                *string    `protobuf:"bytes,37,opt,name=moduleId,def=default" json:"moduleId,omitempty"`
	VersionId               *string    `protobuf:"bytes,2,opt,name=versionId" json:"versionId,omitempty"`
	RequestId               *string    `protobuf:"bytes,3,opt,name=requestId" json:"requestId,omitempty"`
	Offset                  *LogOffset `protobuf:"bytes,35,opt,name=offset" json:"offset,omitempty"`
	Ip                      *string    `protobuf:"bytes,4,opt,name=ip" json:"ip,omitempty"`
	Nickname                *string    `protobuf:"bytes,5,opt,name=nickname" json:"nickname,omitempty"`
	StartTime               *Timestamp `protobuf:"bytes,6,opt,name=startTime" json:"startTime,omitempty"`
	EndTime                 *Timestamp `protobuf:"bytes,7,opt,name=endTime" json:"endTime,omitempty"`
	Latency                 *Latency   `protobuf:"bytes,8,opt,name=latency" json:"latency,omitempty"`
	MegaCycles              *int64     `protobuf:"varint,9,opt,name=megaCycles" json:"megaCycles,omitempty"`
	Method                  *string    `protobuf:"bytes,10,opt,name=method" json:"method,omitempty"`
	Resource                *string    `protobuf:"bytes,11,opt,name=resource" json:"resource,omitempty"`
	HttpVersion             *string    `protobuf:"bytes,12,opt,name=httpVersion" json:"httpVersion,omitempty"`
	Status                  *int32     `protobuf:"varint,13,opt,name=status" json:"status,omitempty"`
	ResponseSize            *int64     `protobuf:"varint,14,opt,name=responseSize" json:"responseSize,omitempty"`
	Referrer                *string    `protobuf:"bytes,15,opt,name=referrer" json:"referrer,omitempty"`
	UserAgent               *string    `protobuf:"bytes,16,opt,name=userAgent" json:"userAgent,omitempty"`
	UrlMapEntry             *string    `protobuf:"bytes,17,opt,name=urlMapEntry" json:"urlMapEntry,omitempty"`
	Combined                *string    `protobuf:"bytes,18,opt,name=combined" json:"combined,omitempty"`
	ApiMcycles              *int64     `protobuf:"varint,19,opt,name=apiMcycles" json:"apiMcycles,omitempty"`
	Host                    *string    `protobuf:"bytes,20,opt,name=host" json:"host,omitempty"`
	Cost                    *float64   `protobuf:"fixed64,21,opt,name=cost" json:"cost,omitempty"`
	TaskQueueName           *string    `protobuf:"bytes,22,opt,name=taskQueueName" json:"taskQueueName,omitempty"`
	TaskName                *string    `protobuf:"bytes,23,opt,name=taskName" json:"taskName,omitempty"`
	WasLoadingRequest       *bool      `protobuf:"varint,24,opt,name=wasLoadingRequest" json:"wasLoadingRequest,omitempty"`
	PendingTime             *Latency   `protobuf:"bytes,25,opt,name=pendingTime" json:"pendingTime,omitempty"`
	ReplicaIndex            *int32     `protobuf:"varint,26,opt,name=replicaIndex,def=-1" json:"replicaIndex,omitempty"`
	Finished                *bool      `protobuf:"varint,27,opt,name=finished,def=1" json:"finished,omitempty"`
	InstanceId              *string    `protobuf:"bytes,28,opt,name=instanceId" json:"instanceId,omitempty"`
	Line                    []*LogLine `protobuf:"bytes,29,rep,name=line" json:"line,omitempty"`
	LinesIncomplete         *bool      `protobuf:"varint,36,opt,name=lines_incomplete,json=linesIncomplete" json:"lines_incomplete,omitempty"`
	AppEngineRelease        []byte     `protobuf:"bytes,38,opt,name=app_engine_release,json=appEngineRelease" json:"app_engine_release,omitempty"`
	ExitReason              *int32     `protobuf:"varint,30,opt,name=exit_reason,json=exitReason" json:"exit_reason,omitempty"`
	WasThrottledForTime     *bool      `protobuf:"varint,31,opt,name=was_throttled_for_time,json=wasThrottledForTime" json:"was_throttled_for_time,omitempty"`
	WasThrottledForRequests *bool      `protobuf:"varint,32,opt,name=was_throttled_for_requests,json=wasThrottledForRequests" json:"was_throttled_for_requests,omitempty"`
	ThrottledTime           *int64     `protobuf:"varint,33,opt,name=throttled_time,json=throttledTime" json:"throttled_time,omitempty"`
	ServerName              []byte     `protobuf:"bytes,34,opt,name=server_name,json=serverName" json:"server_name,omitempty"`
	XXX_unrecognized        []byte     `json:"-"`
}

func (m *RequestLog) Reset()                    { *m = RequestLog{} }
func (m *RequestLog) String() string            { return proto.CompactTextString(m) }
func (*RequestLog) ProtoMessage()               {}
func (*RequestLog) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

const Default_RequestLog_ModuleId string = "default"
const Default_RequestLog_ReplicaIndex int32 = -1
const Default_RequestLog_Finished bool = true

func (m *RequestLog) GetAppId() string {
	if m != nil && m.AppId != nil {
		return *m.AppId
	}
	return ""
}

func (m *RequestLog) GetModuleId() string {
	if m != nil && m.ModuleId != nil {
		return *m.ModuleId
	}
	return Default_RequestLog_ModuleId
}

func (m *RequestLog) GetVersionId() string {
	if m != nil && m.VersionId != nil {
		return *m.VersionId
	}
	return ""
}

func (m *RequestLog) GetRequestId() string {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return ""
}

func (m *RequestLog) GetOffset() *LogOffset {
	if m != nil {
		return m.Offset
	}
	return nil
}

func (m *RequestLog) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *RequestLog) GetNickname() string {
	if m != nil && m.Nickname != nil {
		return *m.Nickname
	}
	return ""
}

func (m *RequestLog) GetStartTime() *Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *RequestLog) GetEndTime() *Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *RequestLog) GetLatency() *Latency {
	if m != nil {
		return m.Latency
	}
	return nil
}

func (m *RequestLog) GetMegaCycles() int64 {
	if m != nil && m.MegaCycles != nil {
		return *m.MegaCycles
	}
	return 0
}

func (m *RequestLog) GetMethod() string {
	if m != nil && m.Method != nil {
		return *m.Method
	}
	return ""
}

func (m *RequestLog) GetResource() string {
	if m != nil && m.Resource != nil {
		return *m.Resource
	}
	return ""
}

func (m *RequestLog) GetHttpVersion() string {
	if m != nil && m.HttpVersion != nil {
		return *m.HttpVersion
	}
	return ""
}

func (m *RequestLog) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *RequestLog) GetResponseSize() int64 {
	if m != nil && m.ResponseSize != nil {
		return *m.ResponseSize
	}
	return 0
}

func (m *RequestLog) GetReferrer() string {
	if m != nil && m.Referrer != nil {
		return *m.Referrer
	}
	return ""
}

func (m *RequestLog) GetUserAgent() string {
	if m != nil && m.UserAgent != nil {
		return *m.UserAgent
	}
	return ""
}

func (m *RequestLog) GetUrlMapEntry() string {
	if m != nil && m.UrlMapEntry != nil {
		return *m.UrlMapEntry
	}
	return ""
}

func (m *RequestLog) GetCombined() string {
	if m != nil && m.Combined != nil {
		return *m.Combined
	}
	return ""
}

func (m *RequestLog) GetApiMcycles() int64 {
	if m != nil && m.ApiMcycles != nil {
		return *m.ApiMcycles
	}
	return 0
}

func (m *RequestLog) GetHost() string {
	if m != nil && m.Host != nil {
		return *m.Host
	}
	return ""
}

func (m *RequestLog) GetCost() float64 {
	if m != nil && m.Cost != nil {
		return *m.Cost
	}
	return 0
}

func (m *RequestLog) GetTaskQueueName() string {
	if m != nil && m.TaskQueueName != nil {
		return *m.TaskQueueName
	}
	return ""
}

func (m *RequestLog) GetTaskName() string {
	if m != nil && m.TaskName != nil {
		return *m.TaskName
	}
	return ""
}

func (m *RequestLog) GetWasLoadingRequest() bool {
	if m != nil && m.WasLoadingRequest != nil {
		return *m.WasLoadingRequest
	}
	return false
}

func (m *RequestLog) GetPendingTime() *Latency {
	if m != nil {
		return m.PendingTime
	}
	return nil
}

func (m *RequestLog) GetReplicaIndex() int32 {
	if m != nil && m.ReplicaIndex != nil {
		return *m.ReplicaIndex
	}
	return Default_RequestLog_ReplicaIndex
}

func (m *RequestLog) GetFinished() bool {
	if m != nil && m.Finished != nil {
		return *m.Finished
	}
	return Default_RequestLog_Finished
}

func (m *RequestLog) GetInstanceId() string {
	if m != nil && m.InstanceId != nil {
		return *m.InstanceId
	}
	return ""
}

func (m *RequestLog) GetLine() []*LogLine {
	if m != nil {
		return m.Line
	}
	return nil
}

func (m *RequestLog) GetLinesIncomplete() bool {
	if m != nil && m.LinesIncomplete != nil {
		return *m.LinesIncomplete
	}
	return false
}

func (m *RequestLog) GetAppEngineRelease() []byte {
	if m != nil {
		return m.AppEngineRelease
	}
	return nil
}

func (m *RequestLog) GetExitReason() int32 {
	if m != nil && m.ExitReason != nil {
		return *m.ExitReason
	}
	return 0
}

func (m *RequestLog) GetWasThrottledForTime() bool {
	if m != nil && m.WasThrottledForTime != nil {
		return *m.WasThrottledForTime
	}
	return false
}

func (m *RequestLog) GetWasThrottledForRequests() bool {
	if m != nil && m.WasThrottledForRequests != nil {
		return *m.WasThrottledForRequests
	}
	return false
}

func (m *RequestLog) GetThrottledTime() int64 {
	if m != nil && m.ThrottledTime != nil {
		return *m.ThrottledTime
	}
	return 0
}

func (m *RequestLog) GetServerName() []byte {
	if m != nil {
		return m.ServerName
	}
	return nil
}

type LogModuleVersion struct {
	ModuleId         *string `protobuf:"bytes,1,opt,name=moduleId,def=default" json:"moduleId,omitempty"`
	VersionId        *string `protobuf:"bytes,2,opt,name=versionId" json:"versionId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LogModuleVersion) Reset()                    { *m = LogModuleVersion{} }
func (m *LogModuleVersion) String() string            { return proto.CompactTextString(m) }
func (*LogModuleVersion) ProtoMessage()               {}
func (*LogModuleVersion) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

const Default_LogModuleVersion_ModuleId string = "default"

func (m *LogModuleVersion) GetModuleId() string {
	if m != nil && m.ModuleId != nil {
		return *m.ModuleId
	}
	return Default_LogModuleVersion_ModuleId
}

func (m *LogModuleVersion) GetVersionId() string {
	if m != nil && m.VersionId != nil {
		return *m.VersionId
	}
	return ""
}

type LogReadRequest struct {
	AppId             *string             `protobuf:"bytes,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	VersionId         []string            `protobuf:"bytes,2,rep,name=version_id,json=versionId" json:"version_id,omitempty"`
	ModuleVersion     []*LogModuleVersion `protobuf:"bytes,19,rep,name=module_version,json=moduleVersion" json:"module_version,omitempty"`
	StartTime         *int64              `protobuf:"varint,3,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime           *int64              `protobuf:"varint,4,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	Offset            *LogOffset          `protobuf:"bytes,5,opt,name=offset" json:"offset,omitempty"`
	RequestId         [][]byte            `protobuf:"bytes,6,rep,name=request_id,json=requestId" json:"request_id,omitempty"`
	MinimumLogLevel   *int32              `protobuf:"varint,7,opt,name=minimum_log_level,json=minimumLogLevel" json:"minimum_log_level,omitempty"`
	IncludeIncomplete *bool               `protobuf:"varint,8,opt,name=include_incomplete,json=includeIncomplete" json:"include_incomplete,omitempty"`
	Count             *int64              `protobuf:"varint,9,opt,name=count" json:"count,omitempty"`
	CombinedLogRegex  *string             `protobuf:"bytes,14,opt,name=combined_log_regex,json=combinedLogRegex" json:"combined_log_regex,omitempty"`
	HostRegex         *string             `protobuf:"bytes,15,opt,name=host_regex,json=hostRegex" json:"host_regex,omitempty"`
	ReplicaIndex      *int32              `protobuf:"varint,16,opt,name=replica_index,json=replicaIndex" json:"replica_index,omitempty"`
	IncludeAppLogs    *bool               `protobuf:"varint,10,opt,name=include_app_logs,json=includeAppLogs" json:"include_app_logs,omitempty"`
	AppLogsPerRequest *int32              `protobuf:"varint,17,opt,name=app_logs_per_request,json=appLogsPerRequest" json:"app_logs_per_request,omitempty"`
	IncludeHost       *bool               `protobuf:"varint,11,opt,name=include_host,json=includeHost" json:"include_host,omitempty"`
	IncludeAll        *bool               `protobuf:"varint,12,opt,name=include_all,json=includeAll" json:"include_all,omitempty"`
	CacheIterator     *bool               `protobuf:"varint,13,opt,name=cache_iterator,json=cacheIterator" json:"cache_iterator,omitempty"`
	NumShards         *int32              `protobuf:"varint,18,opt,name=num_shards,json=numShards" json:"num_shards,omitempty"`
	XXX_unrecognized  []byte              `json:"-"`
}

func (m *LogReadRequest) Reset()                    { *m = LogReadRequest{} }
func (m *LogReadRequest) String() string            { return proto.CompactTextString(m) }
func (*LogReadRequest) ProtoMessage()               {}
func (*LogReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *LogReadRequest) GetAppId() string {
	if m != nil && m.AppId != nil {
		return *m.AppId
	}
	return ""
}

func (m *LogReadRequest) GetVersionId() []string {
	if m != nil {
		return m.VersionId
	}
	return nil
}

func (m *LogReadRequest) GetModuleVersion() []*LogModuleVersion {
	if m != nil {
		return m.ModuleVersion
	}
	return nil
}

func (m *LogReadRequest) GetStartTime() int64 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *LogReadRequest) GetEndTime() int64 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *LogReadRequest) GetOffset() *LogOffset {
	if m != nil {
		return m.Offset
	}
	return nil
}

func (m *LogReadRequest) GetRequestId() [][]byte {
	if m != nil {
		return m.RequestId
	}
	return nil
}

func (m *LogReadRequest) GetMinimumLogLevel() int32 {
	if m != nil && m.MinimumLogLevel != nil {
		return *m.MinimumLogLevel
	}
	return 0
}

func (m *LogReadRequest) GetIncludeIncomplete() bool {
	if m != nil && m.IncludeIncomplete != nil {
		return *m.IncludeIncomplete
	}
	return false
}

func (m *LogReadRequest) GetCount() int64 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *LogReadRequest) GetCombinedLogRegex() string {
	if m != nil && m.CombinedLogRegex != nil {
		return *m.CombinedLogRegex
	}
	return ""
}

func (m *LogReadRequest) GetHostRegex() string {
	if m != nil && m.HostRegex != nil {
		return *m.HostRegex
	}
	return ""
}

func (m *LogReadRequest) GetReplicaIndex() int32 {
	if m != nil && m.ReplicaIndex != nil {
		return *m.ReplicaIndex
	}
	return 0
}

func (m *LogReadRequest) GetIncludeAppLogs() bool {
	if m != nil && m.IncludeAppLogs != nil {
		return *m.IncludeAppLogs
	}
	return false
}

func (m *LogReadRequest) GetAppLogsPerRequest() int32 {
	if m != nil && m.AppLogsPerRequest != nil {
		return *m.AppLogsPerRequest
	}
	return 0
}

func (m *LogReadRequest) GetIncludeHost() bool {
	if m != nil && m.IncludeHost != nil {
		return *m.IncludeHost
	}
	return false
}

func (m *LogReadRequest) GetIncludeAll() bool {
	if m != nil && m.IncludeAll != nil {
		return *m.IncludeAll
	}
	return false
}

func (m *LogReadRequest) GetCacheIterator() bool {
	if m != nil && m.CacheIterator != nil {
		return *m.CacheIterator
	}
	return false
}

func (m *LogReadRequest) GetNumShards() int32 {
	if m != nil && m.NumShards != nil {
		return *m.NumShards
	}
	return 0
}

type LogReadResponse struct {
	Log              []*RequestLog `protobuf:"bytes,1,rep,name=log" json:"log,omitempty"`
	Offset           *LogOffset    `protobuf:"bytes,2,opt,name=offset" json:"offset,omitempty"`
	LastEndTime      *int64        `protobuf:"varint,3,opt,name=last_end_time,json=lastEndTime" json:"last_end_time,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *LogReadResponse) Reset()                    { *m = LogReadResponse{} }
func (m *LogReadResponse) String() string            { return proto.CompactTextString(m) }
func (*LogReadResponse) ProtoMessage()               {}
func (*LogReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *LogReadResponse) GetLog() []*RequestLog {
	if m != nil {
		return m.Log
	}
	return nil
}

func (m *LogReadResponse) GetOffset() *LogOffset {
	if m != nil {
		return m.Offset
	}
	return nil
}

func (m *LogReadResponse) GetLastEndTime() int64 {
	if m != nil && m.LastEndTime != nil {
		return *m.LastEndTime
	}
	return 0
}

type LogUsageRecord struct {
	VersionId        *string `protobuf:"bytes,1,opt,name=version_id,json=versionId" json:"version_id,omitempty"`
	StartTime        *int32  `protobuf:"varint,2,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime          *int32  `protobuf:"varint,3,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	Count            *int64  `protobuf:"varint,4,opt,name=count" json:"count,omitempty"`
	TotalSize        *int64  `protobuf:"varint,5,opt,name=total_size,json=totalSize" json:"total_size,omitempty"`
	Records          *int32  `protobuf:"varint,6,opt,name=records" json:"records,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LogUsageRecord) Reset()                    { *m = LogUsageRecord{} }
func (m *LogUsageRecord) String() string            { return proto.CompactTextString(m) }
func (*LogUsageRecord) ProtoMessage()               {}
func (*LogUsageRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *LogUsageRecord) GetVersionId() string {
	if m != nil && m.VersionId != nil {
		return *m.VersionId
	}
	return ""
}

func (m *LogUsageRecord) GetStartTime() int32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *LogUsageRecord) GetEndTime() int32 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *LogUsageRecord) GetCount() int64 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *LogUsageRecord) GetTotalSize() int64 {
	if m != nil && m.TotalSize != nil {
		return *m.TotalSize
	}
	return 0
}

func (m *LogUsageRecord) GetRecords() int32 {
	if m != nil && m.Records != nil {
		return *m.Records
	}
	return 0
}

type LogUsageRequest struct {
	AppId            *string  `protobuf:"bytes,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	VersionId        []string `protobuf:"bytes,2,rep,name=version_id,json=versionId" json:"version_id,omitempty"`
	StartTime        *int32   `protobuf:"varint,3,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime          *int32   `protobuf:"varint,4,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	ResolutionHours  *uint32  `protobuf:"varint,5,opt,name=resolution_hours,json=resolutionHours,def=1" json:"resolution_hours,omitempty"`
	CombineVersions  *bool    `protobuf:"varint,6,opt,name=combine_versions,json=combineVersions" json:"combine_versions,omitempty"`
	UsageVersion     *int32   `protobuf:"varint,7,opt,name=usage_version,json=usageVersion" json:"usage_version,omitempty"`
	VersionsOnly     *bool    `protobuf:"varint,8,opt,name=versions_only,json=versionsOnly" json:"versions_only,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *LogUsageRequest) Reset()                    { *m = LogUsageRequest{} }
func (m *LogUsageRequest) String() string            { return proto.CompactTextString(m) }
func (*LogUsageRequest) ProtoMessage()               {}
func (*LogUsageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

const Default_LogUsageRequest_ResolutionHours uint32 = 1

func (m *LogUsageRequest) GetAppId() string {
	if m != nil && m.AppId != nil {
		return *m.AppId
	}
	return ""
}

func (m *LogUsageRequest) GetVersionId() []string {
	if m != nil {
		return m.VersionId
	}
	return nil
}

func (m *LogUsageRequest) GetStartTime() int32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *LogUsageRequest) GetEndTime() int32 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *LogUsageRequest) GetResolutionHours() uint32 {
	if m != nil && m.ResolutionHours != nil {
		return *m.ResolutionHours
	}
	return Default_LogUsageRequest_ResolutionHours
}

func (m *LogUsageRequest) GetCombineVersions() bool {
	if m != nil && m.CombineVersions != nil {
		return *m.CombineVersions
	}
	return false
}

func (m *LogUsageRequest) GetUsageVersion() int32 {
	if m != nil && m.UsageVersion != nil {
		return *m.UsageVersion
	}
	return 0
}

func (m *LogUsageRequest) GetVersionsOnly() bool {
	if m != nil && m.VersionsOnly != nil {
		return *m.VersionsOnly
	}
	return false
}

type LogUsageResponse struct {
	Usage            []*LogUsageRecord `protobuf:"bytes,1,rep,name=usage" json:"usage,omitempty"`
	Summary          *LogUsageRecord   `protobuf:"bytes,2,opt,name=summary" json:"summary,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *LogUsageResponse) Reset()                    { *m = LogUsageResponse{} }
func (m *LogUsageResponse) String() string            { return proto.CompactTextString(m) }
func (*LogUsageResponse) ProtoMessage()               {}
func (*LogUsageResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *LogUsageResponse) GetUsage() []*LogUsageRecord {
	if m != nil {
		return m.Usage
	}
	return nil
}

func (m *LogUsageResponse) GetSummary() *LogUsageRecord {
	if m != nil {
		return m.Summary
	}
	return nil
}

func init() {
	proto.RegisterType((*Timestamp)(nil), "google.appengine.logging.v1.Timestamp")
	proto.RegisterType((*Latency)(nil), "google.appengine.logging.v1.Latency")
	proto.RegisterType((*LogServiceError)(nil), "google.appengine.logging.v1.LogServiceError")
	proto.RegisterType((*UserAppLogLine)(nil), "google.appengine.logging.v1.UserAppLogLine")
	proto.RegisterType((*UserAppLogGroup)(nil), "google.appengine.logging.v1.UserAppLogGroup")
	proto.RegisterType((*FlushRequest)(nil), "google.appengine.logging.v1.FlushRequest")
	proto.RegisterType((*SetStatusRequest)(nil), "google.appengine.logging.v1.SetStatusRequest")
	proto.RegisterType((*LogOffset)(nil), "google.appengine.logging.v1.LogOffset")
	proto.RegisterType((*LogLine)(nil), "google.appengine.logging.v1.LogLine")
	proto.RegisterType((*RequestLog)(nil), "google.appengine.logging.v1.RequestLog")
	proto.RegisterType((*LogModuleVersion)(nil), "google.appengine.logging.v1.LogModuleVersion")
	proto.RegisterType((*LogReadRequest)(nil), "google.appengine.logging.v1.LogReadRequest")
	proto.RegisterType((*LogReadResponse)(nil), "google.appengine.logging.v1.LogReadResponse")
	proto.RegisterType((*LogUsageRecord)(nil), "google.appengine.logging.v1.LogUsageRecord")
	proto.RegisterType((*LogUsageRequest)(nil), "google.appengine.logging.v1.LogUsageRequest")
	proto.RegisterType((*LogUsageResponse)(nil), "google.appengine.logging.v1.LogUsageResponse")
	proto.RegisterEnum("google.appengine.logging.v1.LogServiceError_ErrorCode", LogServiceError_ErrorCode_name, LogServiceError_ErrorCode_value)
}

func init() { proto.RegisterFile("logservice/pb/log_service.proto.txt", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1582 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x57, 0x5f, 0x73, 0x1b, 0xb7,
	0x11, 0x2f, 0x25, 0x51, 0x24, 0x97, 0xa2, 0x48, 0xc1, 0x8e, 0x73, 0x71, 0xa2, 0x98, 0x39, 0x3b,
	0xae, 0xea, 0xd8, 0xf2, 0x38, 0x7d, 0x69, 0x94, 0x99, 0x4c, 0xdd, 0x84, 0x4e, 0x38, 0xa5, 0xad,
	0x06, 0x92, 0x32, 0xd3, 0xbe, 0xdc, 0x5c, 0xee, 0x56, 0xc7, 0x9b, 0xdc, 0x01, 0x57, 0x00, 0x67,
	0x4b, 0xed, 0x57, 0xe9, 0x63, 0x3f, 0x40, 0x1f, 0x3b, 0xfd, 0x6e, 0x9d, 0xe9, 0x60, 0x81, 0xe3,
	0x1f, 0x7b, 0x22, 0x47, 0xee, 0x93, 0x88, 0xdf, 0x62, 0x17, 0x8b, 0xbd, 0xdf, 0xfe, 0x16, 0x82,
	0xbb, 0x85, 0xcc, 0x34, 0xaa, 0x97, 0x79, 0x82, 0x8f, 0xab, 0x1f, 0x1f, 0x17, 0x32, 0x8b, 0xfc,
	0xf2, 0xb0, 0x52, 0xd2, 0xc8, 0x43, 0x73, 0x61, 0xd8, 0x87, 0x99, 0x94, 0x59, 0x81, 0x87, 0x71,
	0x55, 0xa1, 0xc8, 0x72, 0x81, 0x87, 0x85, 0xcc, 0xb2, 0x5c, 0x64, 0x87, 0x2f, 0x9f, 0x84, 0x5f,
	0x42, 0xef, 0x34, 0x2f, 0x51, 0x9b, 0xb8, 0xac, 0x58, 0x00, 0x1d, 0x8d, 0x89, 0x14, 0xa9, 0x0e,
	0x5a, 0xe3, 0xd6, 0xc1, 0x26, 0x6f, 0x96, 0xec, 0x26, 0xb4, 0x45, 0x2c, 0xa4, 0x0e, 0x36, 0xc6,
	0xad, 0x83, 0x36, 0x77, 0x8b, 0xf0, 0x0b, 0xe8, 0xcc, 0x62, 0x83, 0x22, 0xb9, 0xbc, 0xb6, 0xeb,
	0x0b, 0x18, 0xce, 0x64, 0x76, 0xe2, 0x92, 0x9d, 0x28, 0x25, 0x95, 0x4d, 0x85, 0x7e, 0x7c, 0x2d,
	0x53, 0x64, 0xdb, 0xb0, 0x71, 0xfc, 0xc7, 0xd1, 0xaf, 0xd8, 0x0d, 0x18, 0x4e, 0x5f, 0xfc, 0xf0,
	0x74, 0x36, 0xfd, 0x26, 0xe2, 0x93, 0xef, 0xcf, 0x26, 0x27, 0xa7, 0xa3, 0x16, 0xdb, 0x83, 0xc1,
	0xc9, 0xe9, 0x31, 0x7f, 0xfa, 0xed, 0x24, 0x9a, 0x70, 0x7e, 0xcc, 0x47, 0x1b, 0x61, 0x09, 0xbb,
	0x67, 0x1a, 0xd5, 0xd3, 0xaa, 0x9a, 0xc9, 0x6c, 0x96, 0x0b, 0x64, 0x9f, 0xc2, 0xae, 0x69, 0x6e,
	0x16, 0xd5, 0x1a, 0x13, 0x9f, 0xd8, 0x60, 0x81, 0x9e, 0x69, 0x4c, 0x6c, 0x7a, 0x05, 0xbe, 0xc4,
	0x82, 0xd2, 0xdb, 0xe4, 0x6e, 0xc1, 0x3e, 0x06, 0x28, 0x64, 0xf6, 0x1c, 0xb5, 0x8e, 0x33, 0x0c,
	0x36, 0xc7, 0xad, 0x83, 0x1e, 0x5f, 0x41, 0xc2, 0x3f, 0xc3, 0x70, 0x79, 0xdc, 0xb7, 0x4a, 0xd6,
	0x15, 0x7b, 0x06, 0x5d, 0x5b, 0xff, 0x22, 0x17, 0x18, 0x6c, 0x8c, 0x37, 0x0f, 0xfa, 0x9f, 0x7f,
	0x76, 0x78, 0x45, 0xe5, 0x0f, 0xd7, 0xd3, 0xe5, 0x9d, 0xc2, 0xfd, 0x08, 0x43, 0xd8, 0x79, 0x56,
	0xd4, 0x7a, 0xce, 0xf1, 0xaf, 0x35, 0x6a, 0xc3, 0x18, 0x6c, 0xd9, 0xaf, 0x4c, 0xd9, 0xef, 0x70,
	0xfa, 0x1d, 0x3e, 0x80, 0xd1, 0x09, 0x9a, 0x13, 0x13, 0x9b, 0x5a, 0x37, 0xfb, 0x6e, 0xc1, 0xb6,
	0x26, 0x80, 0x76, 0xf6, 0xb8, 0x5f, 0x85, 0x0f, 0xa0, 0x37, 0x93, 0xd9, 0xf1, 0xf9, 0xb9, 0x46,
	0xc3, 0xf6, 0x01, 0x94, 0xdb, 0x1f, 0xe5, 0xa9, 0x0f, 0xd9, 0xf3, 0xc8, 0x34, 0x0d, 0xff, 0x0e,
	0x9d, 0xa6, 0x7c, 0x47, 0xb0, 0x65, 0x0b, 0x45, 0x7b, 0xfa, 0x9f, 0xdf, 0xbf, 0xf2, 0x2a, 0x0b,
	0x06, 0x71, 0xf2, 0x59, 0xaf, 0x69, 0xfb, 0x97, 0xd6, 0xf4, 0x3f, 0x7d, 0x00, 0x7f, 0x99, 0x99,
	0xcc, 0xd8, 0x7b, 0xb0, 0x1d, 0x57, 0x55, 0x93, 0x66, 0x8f, 0xb7, 0xe3, 0xaa, 0x9a, 0xa6, 0xec,
	0x2e, 0x74, 0x4b, 0x99, 0xd6, 0x05, 0x4e, 0xd3, 0xe0, 0x53, 0x6b, 0x38, 0xea, 0xa4, 0x78, 0x1e,
	0xd7, 0x85, 0xe1, 0x0b, 0x03, 0xfb, 0x08, 0x7a, 0x2f, 0x51, 0xe9, 0x5c, 0x8a, 0x69, 0x4a, 0x49,
	0xf4, 0xf8, 0x12, 0xb0, 0xd6, 0xc5, 0x95, 0x7d, 0x1e, 0x4b, 0x80, 0x7d, 0x05, 0xdb, 0x92, 0x8a,
	0x15, 0xdc, 0xfd, 0x05, 0x57, 0x5f, 0x94, 0x96, 0x7b, 0x2f, 0xb6, 0x0b, 0x1b, 0x79, 0x15, 0x6c,
	0x51, 0xd8, 0x8d, 0xbc, 0x62, 0xb7, 0xa1, 0x2b, 0xf2, 0xe4, 0x27, 0x11, 0x97, 0x18, 0xb4, 0x09,
	0x5d, 0xac, 0xd9, 0x37, 0xd0, 0xd3, 0x26, 0x56, 0xc6, 0x16, 0x30, 0xd8, 0xbe, 0x56, 0xa5, 0x97,
	0x8e, 0xec, 0xf7, 0xd0, 0x41, 0x91, 0x52, 0x8c, 0xce, 0xb5, 0x62, 0x34, 0x6e, 0xec, 0x2b, 0xe8,
	0x14, 0xae, 0x91, 0x83, 0x2e, 0x45, 0xb8, 0x77, 0xf5, 0xa5, 0xdd, 0x5e, 0xde, 0x38, 0xd9, 0x4f,
	0x5b, 0x62, 0x16, 0x7f, 0x7d, 0x99, 0x14, 0xa8, 0x83, 0x1e, 0x75, 0xd2, 0x0a, 0x62, 0xb9, 0x59,
	0xa2, 0x99, 0xcb, 0x34, 0x00, 0xc7, 0x4d, 0xb7, 0xb2, 0xb5, 0x51, 0xa8, 0x65, 0xad, 0x12, 0x0c,
	0xfa, 0xae, 0x36, 0xcd, 0x9a, 0x8d, 0xa1, 0x3f, 0x37, 0xa6, 0xfa, 0xc1, 0x7d, 0xb6, 0x60, 0x87,
	0xcc, 0xab, 0xd0, 0x0a, 0xe3, 0x07, 0xc4, 0x33, 0xbf, 0x62, 0x21, 0xec, 0x28, 0xd4, 0x95, 0x14,
	0x1a, 0x4f, 0xf2, 0xbf, 0x61, 0xb0, 0x4b, 0xf9, 0xac, 0x61, 0xee, 0xe4, 0x73, 0x54, 0x0a, 0x55,
	0x30, 0x6c, 0x4e, 0x76, 0x6b, 0xcb, 0x8f, 0xda, 0x36, 0x67, 0x86, 0xc2, 0x04, 0x23, 0xc7, 0x8f,
	0x05, 0x60, 0xf3, 0xaa, 0x55, 0xf1, 0x3c, 0xae, 0x26, 0xc2, 0xa8, 0xcb, 0x60, 0xcf, 0xe5, 0xb5,
	0x02, 0xd9, 0xd8, 0x89, 0x2c, 0x7f, 0xcc, 0x05, 0xa6, 0x01, 0x73, 0xb1, 0x9b, 0xb5, 0xad, 0x54,
	0x5c, 0xe5, 0xcf, 0x13, 0x57, 0xa9, 0x1b, 0xae, 0x52, 0x4b, 0xc4, 0x76, 0xfb, 0x5c, 0x6a, 0x13,
	0xdc, 0x24, 0x3f, 0xfa, 0x6d, 0xb1, 0xc4, 0x62, 0xef, 0x8d, 0x5b, 0x07, 0x2d, 0x4e, 0xbf, 0xd9,
	0x3d, 0x18, 0x98, 0x58, 0xff, 0xf4, 0x7d, 0x8d, 0x35, 0xbe, 0xb0, 0xd4, 0xba, 0x45, 0x0e, 0xeb,
	0xa0, 0xcd, 0xc4, 0x02, 0xb4, 0xe1, 0x7d, 0x97, 0x49, 0xb3, 0x66, 0x0f, 0x61, 0xef, 0x55, 0xac,
	0x67, 0x32, 0x4e, 0x73, 0x91, 0xf9, 0xbe, 0x0b, 0x82, 0x71, 0xeb, 0xa0, 0xcb, 0xdf, 0x34, 0xb0,
	0x67, 0xd0, 0xaf, 0x50, 0x58, 0x84, 0x78, 0xf6, 0xc1, 0x35, 0x58, 0xb2, 0xea, 0xc8, 0xee, 0xdb,
	0x6f, 0x53, 0x15, 0x79, 0x12, 0x4f, 0x45, 0x8a, 0x17, 0xc1, 0x6d, 0xfb, 0xe5, 0x8e, 0x36, 0x1e,
	0x3d, 0xe1, 0x6b, 0x38, 0x1b, 0x43, 0xf7, 0x3c, 0x17, 0xb9, 0x9e, 0x63, 0x1a, 0x7c, 0x68, 0x93,
	0x3a, 0xda, 0x32, 0xaa, 0x46, 0xbe, 0x40, 0x6d, 0x25, 0x73, 0xa1, 0x4d, 0x2c, 0x12, 0x2b, 0x05,
	0x1f, 0x39, 0x39, 0x59, 0x22, 0xec, 0x77, 0xb0, 0x45, 0x5a, 0xbc, 0x4f, 0x5a, 0x7c, 0xef, 0x6d,
	0x5d, 0x4c, 0x22, 0x4c, 0x1e, 0xec, 0x37, 0x30, 0xb2, 0x7f, 0x75, 0x94, 0x8b, 0x44, 0x96, 0x55,
	0x81, 0x06, 0x83, 0x7b, 0x54, 0x98, 0x21, 0xe1, 0xd3, 0x05, 0xcc, 0x1e, 0x02, 0xb3, 0x22, 0xe5,
	0x22, 0x46, 0x0a, 0x0b, 0x8c, 0x35, 0x06, 0xf7, 0x49, 0x57, 0x47, 0x71, 0x55, 0x4d, 0xc8, 0xc0,
	0x1d, 0xce, 0xee, 0x40, 0x1f, 0x2f, 0x72, 0x13, 0x29, 0x8c, 0xb5, 0x14, 0xc1, 0xc7, 0xc4, 0x5a,
	0xb0, 0x10, 0x27, 0x84, 0xfd, 0x16, 0x6e, 0xbd, 0x8a, 0x75, 0x64, 0xe6, 0x4a, 0x1a, 0x53, 0x60,
	0x1a, 0x9d, 0x4b, 0x15, 0x91, 0x0c, 0xdf, 0xa1, 0xf3, 0x6f, 0xbc, 0x8a, 0xf5, 0x69, 0x63, 0x7c,
	0x26, 0x15, 0x95, 0xf4, 0x4b, 0xb8, 0xfd, 0xa6, 0x93, 0xd7, 0x33, 0x1d, 0x8c, 0xc9, 0xf1, 0xfd,
	0xd7, 0x1c, 0xfd, 0x67, 0xd5, 0x34, 0x25, 0x17, 0x8e, 0x74, 0xd2, 0x27, 0x7e, 0x4a, 0x36, 0x28,
	0x9d, 0x71, 0x07, 0xfa, 0xf6, 0x61, 0x81, 0x2a, 0x22, 0x1d, 0x0b, 0xe9, 0x82, 0xe0, 0x20, 0xcb,
	0xa6, 0xf0, 0x0c, 0x46, 0x33, 0x99, 0x3d, 0x27, 0x01, 0x6e, 0xfa, 0x73, 0x55, 0xaa, 0x5b, 0xef,
	0x24, 0xd5, 0xe1, 0x7f, 0xdb, 0xb0, 0x3b, 0x93, 0x19, 0xc7, 0x38, 0x6d, 0x98, 0xf8, 0x33, 0x73,
	0x61, 0x1f, 0xc0, 0xbb, 0x59, 0x93, 0x1d, 0xc0, 0x6b, 0x9a, 0x7f, 0x0a, 0xbb, 0xee, 0xc8, 0xc8,
	0x63, 0xc1, 0x0d, 0xe2, 0xc5, 0xa3, 0xb7, 0xf1, 0x62, 0xed, 0x4a, 0x7c, 0x50, 0xae, 0xdd, 0x70,
	0x1f, 0x80, 0x64, 0xd8, 0x55, 0x6e, 0x93, 0x2a, 0xb7, 0x22, 0xcc, 0x1f, 0x40, 0x17, 0x85, 0x2f,
	0xeb, 0x96, 0x7b, 0x15, 0x2d, 0x15, 0xb7, 0x99, 0x32, 0xed, 0x77, 0x9a, 0x32, 0xeb, 0x83, 0x7c,
	0x7b, 0xbc, 0xb9, 0x36, 0xc8, 0xd9, 0x03, 0xd8, 0x2b, 0x73, 0x91, 0x97, 0x75, 0x19, 0xd1, 0xa3,
	0x84, 0xa6, 0x71, 0x87, 0xf8, 0x36, 0xf4, 0x06, 0xcb, 0x79, 0x9a, 0xcb, 0x8f, 0x80, 0xe5, 0x22,
	0x29, 0xea, 0x14, 0x57, 0x09, 0xdf, 0x75, 0x4a, 0xe0, 0x2d, 0x2b, 0x94, 0xbf, 0x09, 0xed, 0x44,
	0xd6, 0xc2, 0x78, 0x99, 0x77, 0x0b, 0xdb, 0x08, 0x8d, 0xc6, 0xd1, 0x89, 0x0a, 0x33, 0xbc, 0x20,
	0xe5, 0xed, 0xf1, 0x51, 0x63, 0xa1, 0x2f, 0x99, 0xe1, 0x85, 0xcd, 0xde, 0x2a, 0x9b, 0xdf, 0xe5,
	0xf4, 0xb7, 0x67, 0x11, 0x67, 0xbe, 0x0b, 0x03, 0x2f, 0x06, 0x51, 0x4e, 0x2a, 0x31, 0xa2, 0xcc,
	0xd7, 0x15, 0xe2, 0x00, 0x46, 0x4d, 0xda, 0x96, 0x0f, 0xf4, 0x46, 0x02, 0x4a, 0x7a, 0xd7, 0xe3,
	0xee, 0x75, 0xa5, 0xd9, 0x63, 0xb8, 0xd9, 0xec, 0x88, 0x2a, 0x5c, 0xf4, 0x06, 0x49, 0x77, 0x9b,
	0xef, 0xc5, 0x6e, 0xdb, 0x9f, 0xb0, 0xe9, 0x0a, 0xf6, 0x09, 0xec, 0x34, 0xa1, 0x49, 0x8c, 0xfb,
	0x14, 0xb6, 0xef, 0xb1, 0xef, 0xac, 0xfe, 0xde, 0x81, 0xfe, 0xe2, 0xf4, 0xa2, 0xa0, 0xe9, 0xd4,
	0xb5, 0xf2, 0xe3, 0x0e, 0x2e, 0x0a, 0xdb, 0x58, 0x49, 0x9c, 0xcc, 0x31, 0xca, 0x0d, 0xaa, 0xd8,
	0x48, 0x45, 0x43, 0xaa, 0xcb, 0x07, 0x84, 0x4e, 0x3d, 0x68, 0x2b, 0x21, 0xea, 0x32, 0xd2, 0xf3,
	0x58, 0xa5, 0x9a, 0xa6, 0x45, 0x9b, 0xf7, 0x44, 0x5d, 0x9e, 0x10, 0x10, 0xfe, 0xab, 0x45, 0xef,
	0x64, 0xc7, 0x7f, 0x37, 0xbe, 0xd8, 0x17, 0xb0, 0x59, 0xc8, 0x2c, 0x68, 0x11, 0x7f, 0x7f, 0x7d,
	0x25, 0x6f, 0x96, 0xcf, 0x29, 0x6e, 0x7d, 0x56, 0x58, 0xb7, 0xf1, 0x4e, 0xac, 0x0b, 0x61, 0x50,
	0xc4, 0xda, 0x44, 0x0b, 0x56, 0x3b, 0xca, 0xf7, 0x2d, 0x38, 0x71, 0xcc, 0x0e, 0xff, 0xdd, 0xa2,
	0x96, 0x3d, 0xb3, 0x6f, 0x3a, 0x8e, 0x89, 0x54, 0xaf, 0xf7, 0x66, 0xeb, 0xf5, 0xf7, 0xd8, 0x7a,
	0x17, 0xb9, 0x37, 0xe3, 0xcf, 0x74, 0xd1, 0x26, 0x19, 0x17, 0x5d, 0xb4, 0xe0, 0xe2, 0xd6, 0x2a,
	0x17, 0xf7, 0x01, 0x8c, 0x34, 0x71, 0x11, 0x69, 0x3b, 0xfd, 0xdb, 0xae, 0x2b, 0x09, 0xa1, 0xd1,
	0x1f, 0x40, 0x47, 0x51, 0x5e, 0x9a, 0x9e, 0x5c, 0x6d, 0xde, 0x2c, 0xc3, 0x7f, 0x6e, 0x50, 0xb5,
	0x7d, 0xea, 0xff, 0x8f, 0xdc, 0xbc, 0x29, 0x0c, 0xed, 0xab, 0x84, 0x61, 0xe5, 0x4a, 0x0f, 0x61,
	0x64, 0x9f, 0x40, 0x45, 0x6d, 0x6c, 0xec, 0xb9, 0xac, 0x95, 0xa6, 0x2b, 0x0c, 0x8e, 0x5a, 0x4f,
	0xf8, 0x70, 0x69, 0xfa, 0xce, 0x5a, 0xec, 0xa8, 0xf2, 0xcd, 0xd5, 0xe8, 0x9a, 0xbb, 0x54, 0x97,
	0x0f, 0x3d, 0xee, 0xa5, 0x4a, 0xdb, 0xa6, 0xaa, 0xed, 0xc5, 0x16, 0x02, 0xe8, 0xe4, 0x60, 0x87,
	0xc0, 0xa5, 0x64, 0x0f, 0x9a, 0x38, 0x91, 0x14, 0xc5, 0xa5, 0x97, 0x81, 0x9d, 0x06, 0x3c, 0x16,
	0xc5, 0x65, 0xf8, 0x8f, 0x16, 0x89, 0xbd, 0x2f, 0x93, 0x67, 0xe5, 0x53, 0x68, 0x53, 0x24, 0xcf,
	0xcb, 0xcf, 0xde, 0xc6, 0xac, 0x15, 0x7e, 0x70, 0xe7, 0xc9, 0x26, 0xd0, 0xd1, 0x75, 0x59, 0xc6,
	0xea, 0xd2, 0xd3, 0xf3, 0x5a, 0x41, 0x1a, 0xdf, 0x3f, 0x0c, 0xff, 0x32, 0x58, 0xfb, 0xb7, 0xf8,
	0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x90, 0xa9, 0x89, 0xde, 0x26, 0x0f, 0x00, 0x00,
}
